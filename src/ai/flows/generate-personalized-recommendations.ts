
// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A movie recommendation AI agent that provides personalized recommendations based on user preferences.
 *
 * - generatePersonalizedRecommendations - A function that generates personalized movie recommendations.
 * - GeneratePersonalizedRecommendationsInput - The input type for the generatePersonalizedRecommendations function.
 * - GeneratePersonalizedRecommendationsOutput - The return type for the generatePersonalizedRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePersonalizedRecommendationsInputSchema = z.object({
  movieTypes: z
    .string()
    .describe("A comma seperated list of the user's preferred movie types."),
});
export type GeneratePersonalizedRecommendationsInput = z.infer<typeof GeneratePersonalizedRecommendationsInputSchema>;

const RecommendedMovieSchema = z.object({
  title: z.string().describe('The title of the recommended movie.'),
  summary: z.string().describe('A short, engaging summary of the movie (around 2-3 sentences).'),
  posterDescription: z
    .string()
    .describe(
      'A brief textual description (1-2 sentences) of a visually appealing movie poster concept for this recommended movie. This description will be used by another AI to generate an image.'
    ),
});

const GeneratePersonalizedRecommendationsOutputSchema = z.object({
  recommendations: z.array(RecommendedMovieSchema).describe('A list of personalized movie recommendations including title, summary, and poster description.'),
});
export type GeneratePersonalizedRecommendationsOutput = z.infer<typeof GeneratePersonalizedRecommendationsOutputSchema>;

export async function generatePersonalizedRecommendations(input: GeneratePersonalizedRecommendationsInput): Promise<GeneratePersonalizedRecommendationsOutput> {
  return generatePersonalizedRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generatePersonalizedRecommendationsPrompt',
  input: {schema: GeneratePersonalizedRecommendationsInputSchema},
  output: {schema: GeneratePersonalizedRecommendationsOutputSchema},
  prompt: `You are a movie recommendation expert. Based on the user's stated preferred movie types, generate a list of 5 personalized movie recommendations.

Preferred Movie Types: {{{movieTypes}}}

For each recommendation, provide:
1. The movie title.
2. A short, engaging summary (2-3 sentences).
3. A brief textual description (1-2 sentences) for a visually appealing movie poster concept. This description should guide an AI image generator. Focus on mood, key elements, and style.

Provide recommendations that align with these preferences. Do not provide any other explanation.
`,
});

const generatePersonalizedRecommendationsFlow = ai.defineFlow(
  {
    name: 'generatePersonalizedRecommendationsFlow',
    inputSchema: GeneratePersonalizedRecommendationsInputSchema,
    outputSchema: GeneratePersonalizedRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
